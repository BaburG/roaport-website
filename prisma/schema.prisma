generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UploadScoreboard {
  id          Int      @id @default(autoincrement())
  username    String   @unique @db.VarChar(255) // Unique username for each user
  total       Int      @default(0)             // Total reports for the user

  reports     reports[]                        // Relation to reports

  @@map("upload_scoreboard")
}

model reports {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(255)
  longitude        Float
  latitude         Float
  bucket_name      String            @db.VarChar(255)
  file_name        String            @db.VarChar(255)
  date_created     DateTime?         @default(now()) @db.Timestamp(6)
  type             String?           @db.VarChar(255) // Type field
  username         String            @db.VarChar(255) // Username field
  verified         DateTime?                          // Verified field (nullable timestamp)
  detail           String?           @db.Text         // Detailed description of the report

  Scoreboard       UploadScoreboard? @relation(fields: [username], references: [username], onDelete: Cascade)

  @@map("reports")
}

enum ReportType {
  pothole
  sign
  sidewalk
  other
}

enum ReportStatus {
  pending_verification
  ML_verified
  pending_human_verification
  Verified
  in_provision
  repaired
}

enum VerifiedBy {
  human
  ai
}

model reports_prod {
  id            Int           @id @default(autoincrement()) @map("Id")
  userId        String        @db.Uuid @map("Userid")
  longitude     Float         @map("Long")
  latitude      Float         @map("Lat")
  bucket_name   String?       @db.VarChar(255)
  file_name     String?       @db.VarChar(255)
  created_at    DateTime      @default(now()) @map("Created_at")
  updated_at    DateTime?     @map("Updated_at")
  deleted_at    DateTime?     @map("Deleted_at")
  type          ReportType    @map("Type")
  status        ReportStatus  @map("Status")
  verified_at   DateTime?     @map("Verified_at")
  verified_by   VerifiedBy?   @map("Verified_by")
  detail        String?       @db.Text @map("Detail")

  @@map("reports_prod")
}

